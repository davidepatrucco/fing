/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockSafe, MockSafeInterface } from "../../contracts/MockSafe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callExecute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b67695bd22be141ffde60c01b61008a60201b60201c565b61004567f948f42db1ca618960c01b61008a60201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008d565b50565b6107208061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a1fe7741461003b5780638da5cb5b1461006b575b600080fd5b6100556004803603810190610050919061046d565b610089565b604051610062919061055d565b60405180910390f35b610073610379565b604051610080919061058e565b60405180910390f35b606061009f67cfd6628e3b2a613960c01b61039d565b6100b367d55db3faaa283c1a60c01b61039d565b6100c76799b7f8de870160ca60c01b61039d565b6100db6720a3060722ea05f160c01b61039d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610606565b60405180910390fd5b61017d67e04b1fadfe204ef960c01b61039d565b6101916705dec64ed4df947160c01b61039d565b6101a567c11b6bd628e16bc160c01b61039d565b6000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101cf929190610665565b6000604051808303816000865af19150503d806000811461020c576040519150601f19603f3d011682016040523d82523d6000602084013e610211565b606091505b509150915061022a67a39fb36cd086e0ee60c01b61039d565b61023e671a38d1e4b3bb5dee60c01b61039d565b816103315761025767c5d6295214faf61560c01b61039d565b61026b67acb937d93618fb9b60c01b61039d565b61027f67e6af79998b61616660c01b61039d565b6000815111156102ba5761029d67670a012a42ab561a60c01b61039d565b6102b1674b52c00a0aeaa13b60c01b61039d565b80518060208301fd5b6102ce674562a1c1472f5b3e60c01b61039d565b6102e267d8dc3d6fbec1ba5260c01b61039d565b6102f66763ee339718ff232f60c01b61039d565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610328906106ca565b60405180910390fd5b6103456759eb88ff380accf560c01b61039d565b61035967a632528af7fba05560c01b61039d565b61036d67811d12e1f5df62a060c01b61039d565b80925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d5826103aa565b9050919050565b6103e5816103ca565b81146103f057600080fd5b50565b600081359050610402816103dc565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261042d5761042c610408565b5b8235905067ffffffffffffffff81111561044a5761044961040d565b5b60208301915083600182028301111561046657610465610412565b5b9250929050565b600080600060408486031215610486576104856103a0565b5b6000610494868287016103f3565b935050602084013567ffffffffffffffff8111156104b5576104b46103a5565b5b6104c186828701610417565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156105075780820151818401526020810190506104ec565b60008484015250505050565b6000601f19601f8301169050919050565b600061052f826104cd565b61053981856104d8565b93506105498185602086016104e9565b61055281610513565b840191505092915050565b600060208201905081810360008301526105778184610524565b905092915050565b610588816103ca565b82525050565b60006020820190506105a3600083018461057f565b92915050565b600082825260208201905092915050565b7f4d6f636b536166653a206f6e6c79206f776e6572000000000000000000000000600082015250565b60006105f06014836105a9565b91506105fb826105ba565b602082019050919050565b6000602082019050818103600083015261061f816105e3565b9050919050565b600081905092915050565b82818337600083830152505050565b600061064c8385610626565b9350610659838584610631565b82840190509392505050565b6000610672828486610640565b91508190509392505050565b7f4d6f636b536166653a2063616c6c206661696c65640000000000000000000000600082015250565b60006106b46015836105a9565b91506106bf8261067e565b602082019050919050565b600060208201905081810360008301526106e3816106a7565b905091905056fea26469706673582212204567cf802b97a1febc1ceeeb425530fd598311dd6fee635132e8eb5fc552406664736f6c63430008140033";

type MockSafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSafe__factory extends ContractFactory {
  constructor(...args: MockSafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockSafe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockSafe__factory {
    return super.connect(runner) as MockSafe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSafeInterface {
    return new Interface(_abi) as MockSafeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockSafe {
    return new Contract(address, _abi, runner) as unknown as MockSafe;
  }
}
