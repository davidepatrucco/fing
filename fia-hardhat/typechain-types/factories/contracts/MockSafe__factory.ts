/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockSafe, MockSafeInterface } from "../../contracts/MockSafe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callExecute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556102cf806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a1fe7741461003b5780638da5cb5b14610064575b600080fd5b61004e6100493660046101aa565b61008f565b60405161005b919061023b565b60405180910390f35b600054610077906001600160a01b031681565b6040516001600160a01b03909116815260200161005b565b6000546060906001600160a01b031633146100e85760405162461bcd60e51b815260206004820152601460248201527326b7b1b5a9b0b3329d1037b7363c9037bbb732b960611b60448201526064015b60405180910390fd5b600080856001600160a01b03168585604051610105929190610289565b6000604051808303816000865af19150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b5091509150816101a1578051156101615780518060208301fd5b60405162461bcd60e51b8152602060048201526015602482015274135bd8dad4d859994e8818d85b1b0819985a5b1959605a1b60448201526064016100df565b95945050505050565b6000806000604084860312156101bf57600080fd5b83356001600160a01b03811681146101d657600080fd5b9250602084013567ffffffffffffffff808211156101f357600080fd5b818601915086601f83011261020757600080fd5b81358181111561021657600080fd5b87602082850101111561022857600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156102685785810183015185820160400152820161024c565b506000604082860101526040601f19601f8301168501019250505092915050565b818382376000910190815291905056fea264697066735822122036cb19c63f2aafaeacba82eb9c717167ba02f5dea4b6b67cbdc586c304a15b4164736f6c63430008140033";

type MockSafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSafe__factory extends ContractFactory {
  constructor(...args: MockSafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockSafe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockSafe__factory {
    return super.connect(runner) as MockSafe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSafeInterface {
    return new Interface(_abi) as MockSafeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockSafe {
    return new Contract(address, _abi, runner) as unknown as MockSafe;
  }
}
