/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleMultiSig,
  SimpleMultiSigInterface,
} from "../../contracts/SimpleMultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Confirm",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Execute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Submit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerToRemove",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200154938038062001549833981016040819052620000349162000229565b80825110158015620000465750600081115b620000985760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d756c746973696720636f6e66696700000000000000000060448201526064015b60405180910390fd5b60005b8251811015620001eb576000838281518110620000bc57620000bc62000303565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001175760405162461bcd60e51b815260206004820152600a6024820152692d32b9379037bbb732b960b11b60448201526064016200008f565b6001600160a01b03811660009081526004602052604090205460ff1615620001745760405162461bcd60e51b815260206004820152600f60248201526e223ab83634b1b0ba329037bbb732b960891b60448201526064016200008f565b6001600160a01b03166000818152600460205260408120805460ff19166001908117909155815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905580620001e28162000319565b9150506200009b565b506001555062000341565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200022457600080fd5b919050565b600080604083850312156200023d57600080fd5b82516001600160401b03808211156200025557600080fd5b818501915085601f8301126200026a57600080fd5b8151602082821115620002815762000281620001f6565b8160051b604051601f19603f83011681018181108682111715620002a957620002a9620001f6565b604052928352818301935084810182019289841115620002c857600080fd5b948201945b83861015620002f157620002e1866200020c565b85529482019493820193620002cd565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200033a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6111f880620003516000396000f3fe6080604052600436106100a05760003560e01c80639ace38c2116100645780639ace38c2146101a6578063ba51a6df146101d7578063c01a8c84146101f7578063c642747414610217578063dc8452cd14610245578063ee22610b1461025b57600080fd5b8063025e7c27146100ac578063173825d9146100e95780632f54bf6e1461010b5780637065cb481461014b57806380f59a651461016b57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610d8d565b61027b565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b50610109610104366004610dc2565b6102a5565b005b34801561011757600080fd5b5061013b610126366004610dc2565b60046020526000908152604090205460ff1681565b60405190151581526020016100e0565b34801561015757600080fd5b50610109610166366004610dc2565b610564565b34801561017757600080fd5b5061013b610186366004610de4565b600360209081526000928352604080842090915290825290205460ff1681565b3480156101b257600080fd5b506101c66101c1366004610d8d565b6106ba565b6040516100e0959493929190610e10565b3480156101e357600080fd5b506101096101f2366004610d8d565b610793565b34801561020357600080fd5b50610109610212366004610d8d565b6108a1565b34801561022357600080fd5b50610237610232366004610ea1565b6108dc565b6040519081526020016100e0565b34801561025157600080fd5b5061023760015481565b34801561026757600080fd5b50610109610276366004610d8d565b610a75565b6000818154811061028b57600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526004602052604090205460ff166102dd5760405162461bcd60e51b81526004016102d490610f6c565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff166103345760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71037bbb732b960a11b60448201526064016102d4565b60018054600054909161034691610fa5565b10156103a85760405162461bcd60e51b815260206004820152602b60248201527f52656d6f766520776f756c642076696f6c61746520726571756972656420636f60448201526a6e6669726d6174696f6e7360a81b60648201526084016102d4565b60001960005b60005481101561040957826001600160a01b0316600082815481106103d5576103d5610fbe565b6000918252602090912001546001600160a01b0316036103f757809150610409565b8061040181610fd4565b9150506103ae565b50600019810361044d5760405162461bcd60e51b815260206004820152600f60248201526e13dddb995c881b9bdd08199bdd5b99608a1b60448201526064016102d4565b6001600160a01b0382166000908152600460205260408120805460ff191690555461047a90600190610fa5565b81146104f9576000805461049090600190610fa5565b815481106104a0576104a0610fbe565b600091825260208220015481546001600160a01b039091169190839081106104ca576104ca610fbe565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600080548061050a5761050a610fed565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da91a25050565b3360009081526004602052604090205460ff166105935760405162461bcd60e51b81526004016102d490610f6c565b6001600160a01b0381166105d65760405162461bcd60e51b815260206004820152600a6024820152692d32b9379037bbb732b960b11b60448201526064016102d4565b6001600160a01b03811660009081526004602052604090205460ff161561062f5760405162461bcd60e51b815260206004820152600d60248201526c20b63932b0b23c9037bbb732b960991b60448201526064016102d4565b6001600160a01b038116600081815260046020526040808220805460ff19166001908117909155825490810183558280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b03191684179055517f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c39190a250565b600281815481106106ca57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b03909316945090929161070090611003565b80601f016020809104026020016040519081016040528092919081815260200182805461072c90611003565b80156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b505050506003830154600490930154919260ff1691905085565b3360009081526004602052604090205460ff166107c25760405162461bcd60e51b81526004016102d490610f6c565b600081116108095760405162461bcd60e51b815260206004820152601460248201527305265717569726564206d757374206265203e20360641b60448201526064016102d4565b6000548111156108665760405162461bcd60e51b815260206004820152602260248201527f52657175697265642063616e6e6f7420657863656564206f776e657220636f756044820152611b9d60f21b60648201526084016102d4565b60018190556040518181527facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9060200160405180910390a150565b3360009081526004602052604090205460ff166108d05760405162461bcd60e51b81526004016102d490610f6c565b6108d981610c66565b50565b3360009081526004602052604081205460ff1661090b5760405162461bcd60e51b81526004016102d490610f6c565b6040805160a0810182526001600160a01b038681168252602082018681529282018581526000606084018190526080840181905260028054600181018255915283517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600590920291820180546001600160a01b0319169190941617835593517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf85015551919283927f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0909101906109e3908261108c565b50606082015160038201805460ff1916911515919091179055608090910151600490910155600254600090610a1a90600190610fa5565b604080516001600160a01b038916815260208101889052919250339183917fc7b679e84d58a9a6d68a05757595dd545527b2c7e1fd2c11fc458fb7ea2337a5910160405180910390a3610a6c81610c66565b95945050505050565b6002548110610ab35760405162461bcd60e51b815260206004820152600a602482015269092dcecc2d8d2c840e8f60b31b60448201526064016102d4565b600060028281548110610ac857610ac8610fbe565b60009182526020909120600590910201600381015490915060ff1615610b235760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016102d4565b60015481600401541015610b795760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f75676820636f6e6669726d6174696f6e73000000000000000060448201526064016102d4565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610bb090600286019061114c565b60006040518083038185875af1925050503d8060008114610bed576040519150601f19603f3d011682016040523d82523d6000602084013e610bf2565b606091505b5050905080610c365760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b60448201526064016102d4565b60405183907fddb556f1d2c1ec821e910b019d3685b229db152a0ecd517ca7e24b8bd713928990600090a2505050565b6002548110610ca45760405162461bcd60e51b815260206004820152600a602482015269092dcecc2d8d2c840e8f60b31b60448201526064016102d4565b600081815260036020908152604080832033845290915290205460ff1615610d025760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb999a5c9b5959607a1b60448201526064016102d4565b60008181526003602090815260408083203384529091529020805460ff191660011790556002805482908110610d3a57610d3a610fbe565b600091825260208220600460059092020101805491610d5883610fd4565b9091555050604051819033907fbde73c39e691e6143456e01935275fd9f654dacca25911f03ab0d587644377eb90600090a350565b600060208284031215610d9f57600080fd5b5035919050565b80356001600160a01b0381168114610dbd57600080fd5b919050565b600060208284031215610dd457600080fd5b610ddd82610da6565b9392505050565b60008060408385031215610df757600080fd5b82359150610e0760208401610da6565b90509250929050565b60018060a01b038616815260006020868184015260a0604084015285518060a085015260005b81811015610e525787810183015185820160c001528201610e36565b50600060c0828601015260c0601f19601f83011685010192505050610e7b606083018515159052565b8260808301529695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610eb657600080fd5b610ebf84610da6565b925060208401359150604084013567ffffffffffffffff80821115610ee357600080fd5b818601915086601f830112610ef757600080fd5b813581811115610f0957610f09610e8b565b604051601f8201601f19908116603f01168101908382118183101715610f3157610f31610e8b565b81604052828152896020848701011115610f4a57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252600990820152682737ba1037bbb732b960b91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610fb857610fb8610f8f565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610fe657610fe6610f8f565b5060010190565b634e487b7160e01b600052603160045260246000fd5b600181811c9082168061101757607f821691505b60208210810361103757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561108757600081815260208120601f850160051c810160208610156110645750805b601f850160051c820191505b8181101561108357828155600101611070565b5050505b505050565b815167ffffffffffffffff8111156110a6576110a6610e8b565b6110ba816110b48454611003565b8461103d565b602080601f8311600181146110ef57600084156110d75750858301515b600019600386901b1c1916600185901b178555611083565b600085815260208120601f198616915b8281101561111e578886015182559484019460019091019084016110ff565b508582101561113c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600080835461115a81611003565b600182811680156111725760018114611187576111b6565b60ff19841687528215158302870194506111b6565b8760005260208060002060005b858110156111ad5781548a820152908401908201611194565b50505082870194505b5092969550505050505056fea2646970667358221220f78233b94a7d44b9bacfcbe4bf19b8dd683eb4b351724507c169dda8abd7ca2764736f6c63430008140033";

type SimpleMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleMultiSig__factory extends ContractFactory {
  constructor(...args: SimpleMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owners: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owners, _required, overrides || {});
  }
  override deploy(
    _owners: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owners, _required, overrides || {}) as Promise<
      SimpleMultiSig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleMultiSig__factory {
    return super.connect(runner) as SimpleMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleMultiSigInterface {
    return new Interface(_abi) as SimpleMultiSigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleMultiSig {
    return new Contract(address, _abi, runner) as unknown as SimpleMultiSig;
  }
}
