/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FIACoinMigration,
  FIACoinMigrationInterface,
} from "../../../contracts/FIACoinMigration.sol/FIACoinMigration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oldContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "MigrationEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeCount",
        type: "uint256",
      },
    ],
    name: "UserMigrated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newContract",
        type: "address",
      },
    ],
    name: "enableMigration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMigrationStatus",
    outputs: [
      {
        internalType: "bool",
        name: "eligible",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasMigrated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "migratedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrationEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oldContract",
    outputs: [
      {
        internalType: "contract FIACoinV6",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620013c8380380620013c8833981810160405281019062000037919062000174565b62000053676f1f2b15b2cdf77560c01b6200010760201b60201c565b6200006f67ee83a61cae014ecb60c01b6200010760201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000bf672b402d8981f4b9f660c01b6200010760201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001a6565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013c826200010f565b9050919050565b6200014e816200012f565b81146200015a57600080fd5b50565b6000815190506200016e8162000143565b92915050565b6000602082840312156200018d576200018c6200010a565b5b60006200019d848285016200015d565b91505092915050565b6080516111ea620001de600039600081816101e3015281816102f5015281816103a50152818161062801526106ee01526111ea6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806359911f6d1161006657806359911f6d146101225780638da5cb5b146101555780638fd3ab80146101735780639457c1dc1461017d578063d7625c881461019957610093565b8063283c184a1461009857806330503c4e146100c857806335b944bf146100e65780634313b53114610104575b600080fd5b6100b260048036038101906100ad9190610d77565b6101c9565b6040516100bf9190610dbd565b60405180910390f35b6100d06101e1565b6040516100dd9190610e37565b60405180910390f35b6100ee610205565b6040516100fb9190610e6d565b60405180910390f35b61010c610218565b6040516101199190610e97565b60405180910390f35b61013c60048036038101906101379190610d77565b61023c565b60405161014c9493929190610eb2565b60405180910390f35b61015d610446565b60405161016a9190610e97565b60405180910390f35b61017b61046c565b005b61019760048036038101906101929190610d77565b61096a565b005b6101b360048036038101906101ae9190610d77565b610cf1565b6040516101c09190610e6d565b60405180910390f35b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008061025667efc3790616c284e760c01b610d11565b61026a67fe370429145190cd60c01b610d11565b600160149054906101000a900460ff169350610290675e8c53069186cce260c01b610d11565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1692506102f367f3d1dadb4bb4dc0460c01b610d11565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b815260040161034c9190610e97565b602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610f23565b91506103a367414edde5454ec05b60c01b610d11565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663cf57ee69866040518263ffffffff1660e01b81526004016103fc9190610e97565b602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d9190610f23565b90509193509193565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104806701a26cf69b43849e60c01b610d11565b61049467ada8dc31e051ca4360c01b610d11565b6104a86724e62842cea25eeb60c01b610d11565b6104bc674c5b6cec08abbb4860c01b610d11565b600160149054906101000a900460ff1661050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290610fad565b60405180910390fd5b61051f6766945638b746c9fc60c01b610d11565b610533672b13dafa08d9cd0b60c01b610d11565b610547679b82f1be56d20ac360c01b610d11565b61055b672307fa31d6a5635760c01b610d11565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90611019565b60405180910390fd5b6105fc67b4dd8d65e3e6d97560c01b610d11565b6106106756131881358dc18060c01b610d11565b61062467b2afde24caaac38760c01b610d11565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161067f9190610e97565b602060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190610f23565b90506106d667d4d0c83dfb470e0060c01b610d11565b6106ea673f45f0d7b40b50d660c01b610d11565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663cf57ee69336040518263ffffffff1660e01b81526004016107459190610e97565b602060405180830381865afa158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190610f23565b905061079c679590cb77ee8abb0060c01b610d11565b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061080867b7546ea6acf1603360c01b610d11565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061086067036cbf4ff8e5f27960c01b610d11565b6108746727c86432c79b236460c01b610d11565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663434ef1913384846040518463ffffffff1660e01b81526004016108d193929190611039565b600060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b505050506109176721402c0333bfc39160c01b610d11565b61092b676ecebcc94681c7a060c01b610d11565b7fd9996fcfa05f18222e3e811aa63cfec080281e53cc6c41b8836f9ee58dd9ba6e33838360405161095e93929190611039565b60405180910390a15050565b61097e67ae5fbc1d824c044060c01b610d11565b610992675db49c1904f48f1f60c01b610d11565b6109a6677314d939cd95feff60c01b610d11565b6109ba6794aeccbb7e89a44060c01b610d11565b6109ce672c31c5001d513b1560c01b610d11565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a55906110bc565b60405180910390fd5b610a72678359475960a9271f60c01b610d11565b610a8667f4652ab3896e325b60c01b610d11565b610a9a671a0f201355e6774560c01b610d11565b610aae67f9adbc553bfc1f1c60c01b610d11565b610ac2671493c0a3fee80a7160c01b610d11565b610ad6678bca5487dc1d9f8a60c01b610d11565b610aea6742f14cb0ee02c8b660c01b610d11565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5090611128565b60405180910390fd5b610b6d67cef4d71b293213ea60c01b610d11565b610b8167a519621d91dfaab060c01b610d11565b610b956746fb13a239b0676060c01b610d11565b610ba967ff95ab91958b98dd60c01b610d11565b600160149054906101000a900460ff1615610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090611194565b60405180910390fd5b610c0d672edf2e45ead9bd3760c01b610d11565b610c21676fb46a3bf49dccc560c01b610d11565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7567d5f7465435d3e2f760c01b610d11565b60018060146101000a81548160ff021916908315150217905550610ca367e774bc5527303ccd60c01b610d11565b610cb76744f6ade3af457dc460c01b610d11565b7ff8cb72b93188da0cf41cc6a23978cb1faee80e70bd3c6bdf0a9301728474544281604051610ce69190610e97565b60405180910390a150565b60026020528060005260406000206000915054906101000a900460ff1681565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4482610d19565b9050919050565b610d5481610d39565b8114610d5f57600080fd5b50565b600081359050610d7181610d4b565b92915050565b600060208284031215610d8d57610d8c610d14565b5b6000610d9b84828501610d62565b91505092915050565b6000819050919050565b610db781610da4565b82525050565b6000602082019050610dd26000830184610dae565b92915050565b6000819050919050565b6000610dfd610df8610df384610d19565b610dd8565b610d19565b9050919050565b6000610e0f82610de2565b9050919050565b6000610e2182610e04565b9050919050565b610e3181610e16565b82525050565b6000602082019050610e4c6000830184610e28565b92915050565b60008115159050919050565b610e6781610e52565b82525050565b6000602082019050610e826000830184610e5e565b92915050565b610e9181610d39565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b6000608082019050610ec76000830187610e5e565b610ed46020830186610e5e565b610ee16040830185610dae565b610eee6060830184610dae565b95945050505050565b610f0081610da4565b8114610f0b57600080fd5b50565b600081519050610f1d81610ef7565b92915050565b600060208284031215610f3957610f38610d14565b5b6000610f4784828501610f0e565b91505092915050565b600082825260208201905092915050565b7f4d6967726174696f6e206e6f7420656e61626c65640000000000000000000000600082015250565b6000610f97601583610f50565b9150610fa282610f61565b602082019050919050565b60006020820190508181036000830152610fc681610f8a565b9050919050565b7f416c7265616479206d6967726174656400000000000000000000000000000000600082015250565b6000611003601083610f50565b915061100e82610fcd565b602082019050919050565b6000602082019050818103600083015261103281610ff6565b9050919050565b600060608201905061104e6000830186610e88565b61105b6020830185610dae565b6110686040830184610dae565b949350505050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006110a6600983610f50565b91506110b182611070565b602082019050919050565b600060208201905081810360008301526110d581611099565b9050919050565b7f496e76616c6964206e657720636f6e7472616374000000000000000000000000600082015250565b6000611112601483610f50565b915061111d826110dc565b602082019050919050565b6000602082019050818103600083015261114181611105565b9050919050565b7f4d6967726174696f6e20616c726561647920656e61626c656400000000000000600082015250565b600061117e601983610f50565b915061118982611148565b602082019050919050565b600060208201905081810360008301526111ad81611171565b905091905056fea26469706673582212202430de48083acfc3d998a346e9b892b7552b6c3b476c0ca22774db2634d2ebe764736f6c63430008160033";

type FIACoinMigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FIACoinMigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FIACoinMigration__factory extends ContractFactory {
  constructor(...args: FIACoinMigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oldContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oldContract, overrides || {});
  }
  override deploy(
    _oldContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oldContract, overrides || {}) as Promise<
      FIACoinMigration & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FIACoinMigration__factory {
    return super.connect(runner) as FIACoinMigration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FIACoinMigrationInterface {
    return new Interface(_abi) as FIACoinMigrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FIACoinMigration {
    return new Contract(address, _abi, runner) as unknown as FIACoinMigration;
  }
}
