/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestProtectedCaller,
  TestProtectedCallerInterface,
} from "../../../contracts/TestProtectedCaller.sol/TestProtectedCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "fia",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n2",
        type: "uint256",
      },
    ],
    name: "callTwice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fia",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "reuseNonceInOneTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806383c378ee1461003b578063fc6db7d614610050575b600080fd5b61004e61004936600461025c565b610063565b005b61004e61005e36600461029e565b610151565b604051638893002f60e01b81526001600160a01b03851690638893002f90610093908690869086906004016102eb565b6020604051808303816000875af11580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d6919061030c565b50604051638893002f60e01b81526001600160a01b03851690638893002f90610107908690869086906004016102eb565b6020604051808303816000875af1158015610126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014a919061030c565b5050505050565b604051638893002f60e01b81526001600160a01b03861690638893002f90610181908790879087906004016102eb565b6020604051808303816000875af11580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061030c565b50604051638893002f60e01b81526001600160a01b03861690638893002f906101f5908790879086906004016102eb565b6020604051808303816000875af1158015610214573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610238919061030c565b505050505050565b80356001600160a01b038116811461025757600080fd5b919050565b6000806000806080858703121561027257600080fd5b61027b85610240565b935061028960208601610240565b93969395505050506040820135916060013590565b600080600080600060a086880312156102b657600080fd5b6102bf86610240565b94506102cd60208701610240565b94979496505050506040830135926060810135926080909101359150565b6001600160a01b039390931683526020830191909152604082015260600190565b60006020828403121561031e57600080fd5b8151801515811461032e57600080fd5b939250505056fea2646970667358221220e3a3b672e1d6635da189c938892bc8da62aca2d25f62badb8955894642c866ca64736f6c63430008140033";

type TestProtectedCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestProtectedCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestProtectedCaller__factory extends ContractFactory {
  constructor(...args: TestProtectedCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestProtectedCaller & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestProtectedCaller__factory {
    return super.connect(runner) as TestProtectedCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestProtectedCallerInterface {
    return new Interface(_abi) as TestProtectedCallerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestProtectedCaller {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestProtectedCaller;
  }
}
