/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FIACoin, FIACoinInterface } from "../../contracts/FIACoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_founder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Fingered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TOTAL_FEE_BP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToBurnBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToFounderBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToTreasuryBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "founderWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isFeeExempt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFeeBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052606460065560326007556014600855601e6009553480156200002557600080fd5b50604051620015dd380380620015dd833981016040819052620000489162000636565b336040518060400160405280600d81526020016c46696e67657220496e2041737360981b8152506040518060400160405280600381526020016246494160e81b81525081600390816200009c919062000712565b506004620000ab828262000712565b5050506001600160a01b038116620000de57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000e981620001f5565b506001600160a01b038216158015906200010b57506001600160a01b03811615155b620001455760405162461bcd60e51b81526020600482015260096024820152683d32b9379030b2323960b91b6044820152606401620000d5565b600a80546001600160a01b038085166001600160a01b031992831617909255600b805492841692909116919091179055620001a63362000183601290565b6200019090600a620008f3565b620001a090633b9aca006200090b565b62000247565b336000908152600c60205260408082208054600160ff1991821681179092556001600160a01b039586168452828420805482168317905593909416825290208054909116909117905562000974565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002735760405163ec442f0560e01b815260006004820152602401620000d5565b620002816000838362000285565b5050565b6001600160a01b0383161580620002a357506001600160a01b038216155b80620002af5750600654155b80620002d357506001600160a01b0383166000908152600c602052604090205460ff165b80620002f757506001600160a01b0382166000908152600c602052604090205460ff165b1562000374576200030a838383620004b9565b6001600160a01b038316158015906200032b57506001600160a01b03821615155b156200036f57816001600160a01b0316836001600160a01b0316600080516020620015bd833981519152836040516200036691815260200190565b60405180910390a35b505050565b6000612710600654836200038991906200090b565b62000395919062000925565b9050600060065460075483620003ac91906200090b565b620003b8919062000925565b9050600060065460085484620003cf91906200090b565b620003db919062000925565b9050600060065460095485620003f291906200090b565b620003fe919062000925565b905060006200040e858762000948565b90506200041d888883620004b9565b83156200043e57600a546200043e9089906001600160a01b031686620004b9565b82156200045f57600b546200045f9089906001600160a01b031685620004b9565b81156200047257620004728883620005df565b866001600160a01b0316886001600160a01b0316600080516020620015bd83398151915288604051620004a791815260200190565b60405180910390a35050505050505050565b6001600160a01b038316620004e8578060026000828254620004dc91906200095e565b909155506200055c9050565b6001600160a01b038316600090815260208190526040902054818110156200053d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200057a5760028054829003905562000599565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200036691815260200190565b6001600160a01b0382166200060b57604051634b637e8f60e11b815260006004820152602401620000d5565b620002818260008362000285565b80516001600160a01b03811681146200063157600080fd5b919050565b600080604083850312156200064a57600080fd5b620006558362000619565b9150620006656020840162000619565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200069957607f821691505b602082108103620006ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036f57600081815260208120601f850160051c81016020861015620006e95750805b601f850160051c820191505b818110156200070a57828155600101620006f5565b505050505050565b81516001600160401b038111156200072e576200072e6200066e565b62000746816200073f845462000684565b84620006c0565b602080601f8311600181146200077e5760008415620007655750858301515b600019600386901b1c1916600185901b1785556200070a565b600085815260208120601f198616915b82811015620007af578886015182559484019460019091019084016200078e565b5085821015620007ce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000835578160001904821115620008195762000819620007de565b808516156200082757918102915b93841c9390800290620007f9565b509250929050565b6000826200084e57506001620008ed565b816200085d57506000620008ed565b81600181146200087657600281146200088157620008a1565b6001915050620008ed565b60ff841115620008955762000895620007de565b50506001821b620008ed565b5060208310610133831016604e8410600b8410161715620008c6575081810a620008ed565b620008d28383620007f4565b8060001904821115620008e957620008e9620007de565b0290505b92915050565b60006200090460ff8416836200083d565b9392505050565b8082028115828204841417620008ed57620008ed620007de565b6000826200094357634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115620008ed57620008ed620007de565b80820180821115620008ed57620008ed620007de565b610c3980620009846000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806361d027b3116100b857806395d89b411161007c57806395d89b411461027d578063a23d3c3514610285578063a9059cbb14610298578063dd62ed3e146102ab578063f2fde38b146102e4578063f6141345146102f757600080fd5b806361d027b31461020857806370a0823114610233578063715018a61461025c5780637c4ccbea146102645780638da5cb5b1461026c57600080fd5b806323b872dd116100ff57806323b872dd146101a5578063313ce567146101b85780633f4218e0146101c757806342966c68146101ea57806355ef9b5e146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a578063118725ce1461017d578063120a81511461019457806318160ddd1461019d575b600080fd5b610144610300565b6040516101519190610a16565b60405180910390f35b61016d610168366004610a80565b610392565b6040519015158152602001610151565b61018660085481565b604051908152602001610151565b61018660095481565b600254610186565b61016d6101b3366004610aaa565b6103ac565b60405160128152602001610151565b61016d6101d5366004610ae6565b600c6020526000908152604090205460ff1681565b6101fd6101f8366004610b08565b6103d0565b005b61018660075481565b600a5461021b906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b610186610241366004610ae6565b6001600160a01b031660009081526020819052604090205490565b6101fd6103dd565b61018660c881565b6005546001600160a01b031661021b565b6101446103f1565b600b5461021b906001600160a01b031681565b61016d6102a6366004610a80565b610400565b6101866102b9366004610b21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101fd6102f2366004610ae6565b61040e565b61018660065481565b60606003805461030f90610b54565b80601f016020809104026020016040519081016040528092919081815260200182805461033b90610b54565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b5050505050905090565b6000336103a081858561044e565b60019150505b92915050565b6000336103ba858285610460565b6103c58585856104df565b506001949350505050565b6103da338261053e565b50565b6103e5610578565b6103ef60006105a5565b565b60606004805461030f90610b54565b6000336103a08185856104df565b610416610578565b6001600160a01b03811661044557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103da816105a5565b61045b83838360016105f7565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156104d957818110156104ca57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161043c565b6104d9848484840360006105f7565b50505050565b6001600160a01b03831661050957604051634b637e8f60e11b81526000600482015260240161043c565b6001600160a01b0382166105335760405163ec442f0560e01b81526000600482015260240161043c565b61045b8383836106cc565b6001600160a01b03821661056857604051634b637e8f60e11b81526000600482015260240161043c565b610574826000836106cc565b5050565b6005546001600160a01b031633146103ef5760405163118cdaa760e01b815233600482015260240161043c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166106215760405163e602df0560e01b81526000600482015260240161043c565b6001600160a01b03831661064b57604051634a1406b160e11b81526000600482015260240161043c565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104d957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106be91815260200190565b60405180910390a350505050565b6001600160a01b03831615806106e957506001600160a01b038216155b806106f45750600654155b8061071757506001600160a01b0383166000908152600c602052604090205460ff165b8061073a57506001600160a01b0382166000908152600c602052604090205460ff165b156107c15761074a8383836108f9565b6001600160a01b0383161580159061076a57506001600160a01b03821615155b1561045b57816001600160a01b0316836001600160a01b03167f59abb1a21ac9c02d9c217285768a906af17496e4cada7962f129b92f0ac948cf836040516107b491815260200190565b60405180910390a3505050565b6000612710600654836107d49190610ba4565b6107de9190610bbb565b90506000600654600754836107f39190610ba4565b6107fd9190610bbb565b90506000600654600854846108129190610ba4565b61081c9190610bbb565b90506000600654600954856108319190610ba4565b61083b9190610bbb565b905060006108498587610bdd565b90506108568888836108f9565b831561087457600a546108749089906001600160a01b0316866108f9565b821561089257600b546108929089906001600160a01b0316856108f9565b81156108a2576108a2888361053e565b866001600160a01b0316886001600160a01b03167f59abb1a21ac9c02d9c217285768a906af17496e4cada7962f129b92f0ac948cf886040516108e791815260200190565b60405180910390a35050505050505050565b6001600160a01b0383166109245780600260008282546109199190610bf0565b909155506109969050565b6001600160a01b038316600090815260208190526040902054818110156109775760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161043c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166109b2576002805482900390556109d1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107b491815260200190565b600060208083528351808285015260005b81811015610a4357858101830151858201604001528201610a27565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a7b57600080fd5b919050565b60008060408385031215610a9357600080fd5b610a9c83610a64565b946020939093013593505050565b600080600060608486031215610abf57600080fd5b610ac884610a64565b9250610ad660208501610a64565b9150604084013590509250925092565b600060208284031215610af857600080fd5b610b0182610a64565b9392505050565b600060208284031215610b1a57600080fd5b5035919050565b60008060408385031215610b3457600080fd5b610b3d83610a64565b9150610b4b60208401610a64565b90509250929050565b600181811c90821680610b6857607f821691505b602082108103610b8857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103a6576103a6610b8e565b600082610bd857634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103a6576103a6610b8e565b808201808211156103a6576103a6610b8e56fea2646970667358221220f34ca74f46dabd1eb8ba706230fe3370ac18475f55699ca99a40926d6897dbf664736f6c6343000814003359abb1a21ac9c02d9c217285768a906af17496e4cada7962f129b92f0ac948cf";

type FIACoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FIACoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FIACoin__factory extends ContractFactory {
  constructor(...args: FIACoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _treasury: AddressLike,
    _founder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_treasury, _founder, overrides || {});
  }
  override deploy(
    _treasury: AddressLike,
    _founder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_treasury, _founder, overrides || {}) as Promise<
      FIACoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FIACoin__factory {
    return super.connect(runner) as FIACoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FIACoinInterface {
    return new Interface(_abi) as FIACoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FIACoin {
    return new Contract(address, _abi, runner) as unknown as FIACoin;
  }
}
